#pragma once
#include "CInput.h"
#include "InputStateUpdate.h"
#include "InputMovement.h"
#include "ControllerVibration.h"

// キーボード、コントローラーでの入力を管理するクラス
class InputManager
{
	static InputManager* instance;	// インスタンス

	GameController* controller;	// コントローラークラス

	InputStateUpdate* inputStateUpdate;	// 入力状態更新クラス

	InputMovement* inputMovement;	// 入力の移動量を取得するクラス

	ControllerVibration* viberation;

	InputManager();
	~InputManager();
public:
	static InputManager* GetInstance();

	static void Delete();

	void Update();

	// ボタン押されているか
	bool GetInputPress(InputType::TYPE _button);

	// ボタン押された状態か
	bool GetInputTrigger(InputType::TYPE _button);

	// デッドゾーン（スティックの遊びを設定する）
	void SetDeadZone(const Vector2& _deadzone);

	// コントローラーのポインタ
	GameController* GetController()const { return controller; }

	// 左スティックとキーボードの入力を取得する 範囲(0.0〜1.0)
	Vector2 GetMovement();

	void Vibelation(float _high, float _low, float _time);
};



